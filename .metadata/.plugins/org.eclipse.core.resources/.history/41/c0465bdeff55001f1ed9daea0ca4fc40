package com.db.controller;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Duration;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.db.model.Employee;
import com.db.model.EmployeeRepository;

@RestController
public class DBController {

	@Autowired
	EmployeeRepository employeeRepository;

	@PostMapping("/addData")
	public String data(@RequestBody Integer employeeId) throws ParseException {
		Employee employee = new Employee();
		String dateString = "09/12/1995";
		SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        DateTimeFormatter formatter1 = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss:SSS");

		Date dobDate = formatter.parse(dateString);
		
		employee.setDOB(dobDate);
		employee.setEmpDesignation("AI Specialist");
		employee.setEmpId(employeeId);
		employee.setEmpJoiningDate("2024-08-09 08:48:52.638");
		employee.setEmpName("Harsh");
		employeeRepository.save(employee);
		
		Employee empData = employeeRepository.findById(employeeId).orElse(null);
		String  empJoiningDateDB = empData.getEmpJoiningDate();
		LocalDateTime now = LocalDateTime.now();
        String formattedNow = now.format(formatter1);  
		System.out.println("DBDate :: " + empJoiningDateDB + " & newSysDate :: " +formattedNow);

	
		DateTimeFormatter formatter3 = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss.SSS");
        LocalDateTime endDateTime = LocalDateTime.parse(formattedNow, formatter3);
        System.out.println("endDateTime :: "+endDateTime);
		LocalDateTime startDateTime = LocalDateTime.parse(empJoiningDateDB, formatter3);


        // Calculate the duration between the two date-time objects
        Duration duration = Duration.between(startDateTime, endDateTime);

        // Get the difference in minutes
        long minutesDifference = duration.toMinutes();

        // Print the result
        System.out.println("Minutes difference: " + minutesDifference);
 
		
		
		return "saved";

	}

}
